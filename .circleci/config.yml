version: 2.1

parameters:

  api:
    type: boolean
    default: false

  gradleProfiler:
    type: boolean
    default: false

  gradleProfilerVersion:
    type: string
    default: "0.15.0"

  gradleProfilerScenarioFile:
    type: string
    default: ".circleci/gradle_profiler/default_scenario.txt"

  gradleProfilerFlags:
    type: string
    default: "--benchmark --cold-daemon --profile buildscan --iterations=10 --measure-config-time --measure-gc"

references:

  working_dir: &working_dir
                 ~/project

executors:
  jdk_executor:
    working_directory: *working_dir
    docker:
      - image: cimg/openjdk:11.0
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true

  android_executor:
    working_directory: *working_dir
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true

commands:

  attach_to_workspace:
    steps:
      - attach_workspace:
          at: ~/

  persist_gradle_build_cache:
    steps:
      - persist_to_workspace:
          root: ~/
          paths:
            - gradle-build-cache

jobs:

  ktlint:
    executor: jdk_executor
    steps:
      - checkout
      - run:
          name: Ktlint
          command: ./gradlew ktlint --stacktrace

  security:
    executor: jdk_executor
    steps:
      - checkout
      - run:
          name: Verify the integrity of the Gradle Wrapper JAR
          command: |
            # https://docs.gradle.org/current/userguide/gradle_wrapper.html#wrapper_checksum_verification
            cd gradle/wrapper
            gradleVersion=$(grep "distributionUrl" gradle-wrapper.properties | grep -Po "(\d+\.)+\d+")
            curl --location --output gradle-wrapper.jar.sha256 https://services.gradle.org/distributions/gradle-${gradleVersion}-wrapper.jar.sha256
            echo "  gradle-wrapper.jar" >> gradle-wrapper.jar.sha256
            sha256sum --check gradle-wrapper.jar.sha256

  build:
    executor: jdk_executor
    steps:
      - checkout
      - attach_to_workspace
      - run:
          name: Assemble
          command: ./gradlew assemble --stacktrace
      - persist_gradle_build_cache
      - store_artifacts:
          path: ./build/libs
          destination: jars

  test:
    executor: jdk_executor
    steps:
      - checkout
      - attach_to_workspace
      - run:
          name: Run tests
          command: ./gradlew test --stacktrace
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ./build/reports/tests/test
          destination: tests

  validatePlugins:
    executor: jdk_executor
    steps:
      - checkout
      - attach_to_workspace
      - run:
          name: Validate plugins
          command: ./gradlew validatePlugins --stacktrace

  publish:
    executor: jdk_executor
    steps:
      - checkout
      - attach_to_workspace
      - run:
          name: Uploading to Nexus Sonatype
          command: ./gradlew publish -PLOCAL_UPLOAD=false --refresh-dependencies --stacktrace

  upgradeDependencies:
    executor: jdk_executor
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "83:20:2b:71:67:9c:01:43:fe:ad:82:dc:e0:b6:b4:61"
      - run:
          name: Upgrade Dependencies
          command: ./gradlew upgradeDependencies -PpullRequestEnabled=true --stacktrace

  gradleProfiler:
    executor: android_executor
    steps:
      - checkout
      - run:
          name: Download Gradle Profiler
          command: |
            wget https://repo.gradle.org/gradle/ext-releases-local/org/gradle/profiler/gradle-profiler/<< pipeline.parameters.gradleProfilerVersion >>/gradle-profiler-<< pipeline.parameters.gradleProfilerVersion >>.zip
            unzip gradle-profiler-<< pipeline.parameters.gradleProfilerVersion >>.zip -d .
      - run:
          name: Profile
          command: gradle-profiler-<< pipeline.parameters.gradleProfilerVersion >>/bin/gradle-profiler << pipeline.parameters.gradleProfilerFlags >> --scenario-file ./<< pipeline.parameters.gradleProfilerScenarioFile >> --project-dir ./sample
      - store_artifacts:
          path: ./profile-out/
          destination: profile-out

workflows:
  commit:
    unless: << pipeline.parameters.api >>
    jobs:
      - security
      - ktlint
      - build
      - test:
          requires:
            - build
      - validatePlugins:
          requires:
            - build
      - publish:
          filters:
            branches:
              only:
                - master
                - production
          requires:
            - ktlint
            - test
            - validatePlugins
            - security
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - upgradeDependencies

  gradleProfiler:
    when: << pipeline.parameters.gradleProfiler >>
    jobs:
      - gradleProfiler